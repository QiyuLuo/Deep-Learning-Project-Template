import torch
from modeling.losses.loss import IoULoss
x = torch.rand(5)
y = torch.rand(5)
b1 = torch.randn(5, 4)
b1[:, 0], b1[:, 1], b1[:, 2], b1[:, 3] = x, y, torch.clamp(x + torch.rand(5), max=1.), torch.clamp(y + torch.rand(5), max=1.)
b2 = torch.randn(6, 4)
x = torch.rand(6)
y = torch.rand(6)
b2[:, 0], b2[:, 1], b2[:, 2], b2[:, 3] = x, y, torch.clamp(x + torch.rand(6), max=1.), torch.clamp(y + torch.rand(6), max=1.)

b1 = torch.tensor([[0.8215, 0.6458, 0.0476, 0.2187],
        [0.2441, 0.0919, 0.0301, 0.1449],
        [0.4210, 0.6727, 0.0445, 0.2225],
        [0.9061, 0.5093, 0.0486, 0.1989],
        [0.5199, 0.9843, 0.0451, 0.2156],
        [0.3313, 0.8107, 0.0432, 0.2205],
        [0.4126, 0.2216, 0.0317, 0.1528],
        [0.5308, 0.0346, 0.0344, 0.1321],
        [0.4985, 0.0268, 0.0348, 0.1361],
        [0.3055, 0.1432, 0.0265, 0.1309]])
b2 = torch.tensor([[0.8419, 0.6560, 0.0339, 0.2194],
        [0.2510, 0.0741, 0.0333, 0.1630],
        [0.4409, 0.6769, 0.0401, 0.2389],
        [0.9159, 0.5213, 0.0401, 0.1981],
        [0.5586, 0.9815, 0.0432, 0.2370],
        [0.3510, 0.8167, 0.0365, 0.2315],
        [0.4214, 0.2139, 0.0302, 0.1574],
        [0.5307, 0.0310, 0.0271, 0.1380],
        [0.4982, 0.0231, 0.0286, 0.1481],
        [0.3180, 0.1296, 0.0182, 0.1370]])
cri = IoULoss(linear=True)

loss = cri(b1, b2)
print(loss)
